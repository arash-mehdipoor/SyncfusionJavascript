@model string
@{
    ViewData["Title"] = "Home Page";
}




<div class="sample-browser">
    <div class='content @*e-view*@'>
        <div class='sample-content'>
            <div class="control-content">
                <div class="container-fluid">
                    <div class="control-section">
                        <div class="control-section">
                            <div id="Grid"></div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="~/lib/syncfusion/js/ej2.min.js"></script>
    <script src="~/js/site.js" type="text/javascript"></script>
    <script>
       
        var tdata = []; 
        var datam = new ej.data.DataManager(
            {
                url: `api/SyncfusionData`,
                adaptor: new ej.data.WebApiAdaptor(),
                crossDomain: true
            })
            .executeQuery(new ej.data.Query().skip(0).take(2))
                .then((e) => 
                {
                    e.result.queryResult.forEach(
                        function (item)
                        {
                            tdata.push(item);
                        });

                    grid.dataSource = tdata;
                }); 

        
        const SERVICE_URI: string = 'http://controller.com/actions';

new DataManager({
        adaptor: new CustomDataAdaptor({
                getData: function(option: AjaxOption) {
                      let xhttp: XMLHttpRequest = new XMLHttpRequest();
                      xhttp.onreadystatechange = function () {
                        if (this.readyState == 4) {
                             let request: Object = extend({}, option, { httpRequest: xhttp });
                             if ((xhttp.status >= 200 && xhttp.status <= 299) || xhttp.status === 304) {
                             let data: Object = JSON.parse(xhttp.responseText);
                             option.onSuccess(data, request);
                            } else {
                             option.onFailure(request);
                            }
                        }
                    };
                    xhttp.open("POST", SERVICE_URI, true);
                    xhttp.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
                    xhttp.send(option.data);
                }
            })
    }).executeQuery(new Query().take(8)).then((e) => {
        //e.result will contain the records
    });
        
    </script>
}

